import { diff } from 'radash';
import type {
  AnyOf,
  PropertiesList,
  Property,
  Ref,
} from 'docs/server/ui/propertiesList/types.ts';

export function collapseList(
  propList: readonly Property[],
  property: Property | AnyOf | Ref,
): readonly Property[] {
  if (propList.length !== 2) {
    return propList;
  }
  const nullPropIndex = propList.findIndex((p) => p.type === 'null');
  if (nullPropIndex === -1) {
    return propList;
  }
  const notNullProp = propList[1 - nullPropIndex];

  let description;
  if (!notNullProp.description && 'description' in property) {
    description = property.description;
  }

  return [
    {
      ...notNullProp,
      type: Array.isArray(notNullProp.type)
        ? [...notNullProp.type, 'null']
        : [notNullProp.type, 'null'],
      ...(description && { description }),
    },
  ];
}

type Modifications = {
  moveToFront?: string[];
  moveToBack?: string[];
  hide?: string[];
  makeRequired?: string[];
};

export function adjustAutogeneratedProperties(
  properties: PropertiesList,
  {
    moveToFront = [],
    moveToBack = [],
    hide = [],
    makeRequired = [],
  }: Modifications,
) {
  const propertyOrder = [
    ...moveToFront,
    ...diff(properties.propertyOrder, [...moveToFront, ...moveToBack, ...hide]),
    ...moveToBack,
  ];
  const required = [
    ...new Set([...(properties.required ?? []), ...makeRequired]),
  ];

  return {
    ...properties,
    propertyOrder,
    required,
  };
}
